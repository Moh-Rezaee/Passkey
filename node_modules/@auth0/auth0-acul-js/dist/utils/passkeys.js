import{isWebAuthPlatformAvailable as t}from"./browser-capabilities.js";import{base64UrlToUint8Array as e,uint8ArrayToBase64Url as a}from"./codec.js";import{Errors as r}from"./errors.js";function n(t){return t?a(t):null}async function i(a){if(!a?.challenge)throw new Error(r.PASSKEY_PUBLIC_KEY_UNAVAILABLE);const i=await t(),o=e(a.challenge),c=await navigator.credentials.get({publicKey:{challenge:o}});if(!c)throw new Error(r.PASSKEY_CREDENTIALS_UNAVAILABLE);if(!function(t){return void 0!==t.authenticatorData}(c.response))throw new Error(r.PASSKEY_EXPECTED_ASSERTION_RESPONSE);const s=c.response;return{id:c.id,rawId:n(c.rawId??null),type:c.type,authenticatorAttachment:c.authenticatorAttachment,response:{clientDataJSON:n(s.clientDataJSON??null),authenticatorData:n(s.authenticatorData??null),signature:n(s.signature??null),userHandle:n(s.userHandle??null)},isUserVerifyingPlatformAuthenticatorAvailable:i}}async function o(t){if(!t?.challenge)throw new Error(r.PASSKEY_PUBLIC_KEY_UNAVAILABLE);const n=function(t){const{challenge:a,user:r,authenticatorSelection:n,pubKeyCredParams:i,rp:o}=t;return{rp:o,user:{id:e(r.id),name:r.name,displayName:r.displayName},challenge:e(a),pubKeyCredParams:i.map((({alg:t})=>({type:"public-key",alg:t}))),authenticatorSelection:{...n,residentKey:n.residentKey,userVerification:n.userVerification},attestation:"direct"}}(t),i=await navigator.credentials.create({publicKey:n});if(!i)throw new Error(r.PASSKEY_CREATE_FAILED);const o=i.response;return{id:i.id,rawId:a(i.rawId),type:i.type,authenticatorAttachment:i.authenticatorAttachment,response:{clientDataJSON:a(o.clientDataJSON),attestationObject:a(o.attestationObject),transports:"function"==typeof o?.getTransports?o.getTransports():void 0}}}export{o as createPasskeyCredentials,i as getPasskeyCredentials};
//# sourceMappingURL=passkeys.js.map
