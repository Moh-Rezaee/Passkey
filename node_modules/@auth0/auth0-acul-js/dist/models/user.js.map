{"version":3,"file":"user.js","sources":["../../../src/models/user.ts"],"sourcesContent":["import type { UserContext, UserMembers } from '../../interfaces/models/user';\n\nexport class User implements UserMembers {\n  id: UserMembers['id'];\n  username: UserMembers['username'];\n  email: UserMembers['email'];\n  picture: UserMembers['picture'];\n  phoneNumber: UserMembers['phoneNumber'];\n  userMetadata: UserMembers['userMetadata'];\n  appMetadata: UserMembers['appMetadata'];\n  enrolledDevices: UserMembers['enrolledDevices'];\n  enrolledEmails: UserMembers['enrolledEmails'];\n  enrolledPhoneNumbers: UserMembers['enrolledPhoneNumbers'];\n  enrolledFactors: UserMembers['enrolledFactors'];\n  organizations: UserMembers['organizations'];\n\n  constructor(user: UserContext) {\n    this.id = user?.id ?? null;\n    this.username = user?.username ?? null;\n    this.email = user?.email ?? null;\n    this.picture = user?.picture ?? null;\n    this.phoneNumber = user?.phone_number ?? null;\n    this.userMetadata = user?.user_metadata ?? null;\n    this.appMetadata = user?.app_metadata ?? null;\n    this.enrolledFactors = user?.enrolled_factors ?? null;\n    this.enrolledEmails = user?.enrolled_emails ?? null;\n    this.enrolledPhoneNumbers = user?.enrolled_phone_numbers ?? null;\n    this.enrolledDevices = user?.enrolled_devices ?? null;\n    this.organizations = User.getOrganizations(user);\n  }\n\n  static getOrganizations(user: UserContext): UserMembers['organizations'] {\n    if (!user?.organizations || !Array.isArray(user?.organizations)) return null;\n\n    return user?.organizations.map((organization) => {\n      return {\n        organizationId: organization.id,\n        organizationName: organization.name,\n        displayName: organization.display_name,\n        branding: {\n          logoUrl: organization.branding?.logo_url,\n        },\n      };\n    });\n  }\n}\n"],"names":["User","id","username","email","picture","phoneNumber","userMetadata","appMetadata","enrolledDevices","enrolledEmails","enrolledPhoneNumbers","enrolledFactors","organizations","constructor","user","this","phone_number","user_metadata","app_metadata","enrolled_factors","enrolled_emails","enrolled_phone_numbers","enrolled_devices","getOrganizations","Array","isArray","map","organization","organizationId","organizationName","name","displayName","display_name","branding","logoUrl","logo_url"],"mappings":"MAEaA,EACXC,GACAC,SACAC,MACAC,QACAC,YACAC,aACAC,YACAC,gBACAC,eACAC,qBACAC,gBACAC,cAEA,WAAAC,CAAYC,GACVC,KAAKd,GAAKa,GAAMb,IAAM,KACtBc,KAAKb,SAAWY,GAAMZ,UAAY,KAClCa,KAAKZ,MAAQW,GAAMX,OAAS,KAC5BY,KAAKX,QAAUU,GAAMV,SAAW,KAChCW,KAAKV,YAAcS,GAAME,cAAgB,KACzCD,KAAKT,aAAeQ,GAAMG,eAAiB,KAC3CF,KAAKR,YAAcO,GAAMI,cAAgB,KACzCH,KAAKJ,gBAAkBG,GAAMK,kBAAoB,KACjDJ,KAAKN,eAAiBK,GAAMM,iBAAmB,KAC/CL,KAAKL,qBAAuBI,GAAMO,wBAA0B,KAC5DN,KAAKP,gBAAkBM,GAAMQ,kBAAoB,KACjDP,KAAKH,cAAgBZ,EAAKuB,iBAAiBT,GAG7C,uBAAOS,CAAiBT,GACtB,OAAKA,GAAMF,eAAkBY,MAAMC,QAAQX,GAAMF,eAE1CE,GAAMF,cAAcc,KAAKC,IACvB,CACLC,eAAgBD,EAAa1B,GAC7B4B,iBAAkBF,EAAaG,KAC/BC,YAAaJ,EAAaK,aAC1BC,SAAU,CACRC,QAASP,EAAaM,UAAUE,cARkC"}