import{BaseContext as e}from"../../models/base-context.js";import{ScreenIds as t}from"../../utils/enums.js";import{FormHandler as s}from"../../utils/form-handler.js";import{ScreenOverride as n}from"./screen-override.js";class a extends e{static screenIdentifier=t.MFA_EMAIL_CHALLENGE;screen;constructor(){super();const e=this.getContext("screen");this.screen=new n(e)}async continue(e){const t={state:this.transaction.state,telemetry:[a.screenIdentifier,"continue"]},n={...e,action:"default"};e.rememberDevice&&(n.rememberDevice="true"),await new s(t).submitData(n)}async resendCode(e){const t={state:this.transaction.state,telemetry:[a.screenIdentifier,"resendCode"]};await new s(t).submitData({...e,action:"resend-code"})}async tryAnotherMethod(e){const t={state:this.transaction.state,telemetry:[a.screenIdentifier,"tryAnotherMethod"]};await new s(t).submitData({...e,action:"pick-authenticator"})}async pickEmail(e){const t={state:this.transaction.state,telemetry:[a.screenIdentifier,"pickEmail"]};await new s(t).submitData({...e,action:"pick-email"})}}export{a as default};
//# sourceMappingURL=index.js.map
