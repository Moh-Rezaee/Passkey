{"version":3,"file":"index.js","sources":["../../../../src/screens/mfa-email-list/index.ts"],"sourcesContent":["import { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type {\n  MfaEmailListMembers,\n  ScreenMembersOnMfaEmailList as ScreenOptions,\n  SelectMfaEmailOptions,\n} from '../../../interfaces/screens/mfa-email-list';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Class implementing the mfa-email-list screen functionality\n * This screen allows users to select an enrolled email address for MFA\n */\nexport default class MfaEmailList extends BaseContext implements MfaEmailListMembers {\n  /**\n   * Creates an instance of MfaEmailList screen manager\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Selects an enrolled email address from the list\n   * @param payload The options containing the selection action\n   * @example\n   * ```typescript\n   * import MfaEmailList from '@auth0/auth0-acul-js/mfa-email-list';\n   *\n   * const mfaEmailList = new MfaEmailList();\n   * await mfaEmailList.selectMfaEmail({\n   *   index: 0 // for demonstration we are selecting the first index\n   * });\n   * ```\n   */\n  async selectMfaEmail(payload: SelectMfaEmailOptions): Promise<void> {\n    const index = payload?.index;\n    if (index === undefined || index < 0 || index >= (this.user?.enrolledEmails?.length ?? 0)) {\n      throw new Error('Index out of bounds.');\n    }\n\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: `selection-action::${index}`,\n    });\n  }\n\n  /**\n   * Navigates back to the previous screen\n   * @param payload Optional custom options to include with the request\n   * @example\n   * ```typescript\n   * import MfaEmailList from '@auth0/auth0-acul-js/mfa-email-list';\n   *\n   * const mfaEmailList = new MfaEmailList();\n   * await mfaEmailList.goBack();\n   * ```\n   */\n  async goBack(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: 'back-action',\n    });\n  }\n}\n\nexport { MfaEmailListMembers, ScreenOptions as ScreenMembersOnMfaEmailList };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["MfaEmailList","BaseContext","constructor","super","selectMfaEmail","payload","index","undefined","this","user","enrolledEmails","length","Error","options","state","transaction","FormHandler","submitData","action","goBack"],"mappings":"qHAeqB,MAAAA,UAAqBC,EAIxC,WAAAC,GACEC,QAgBF,oBAAMC,CAAeC,GACnB,MAAMC,EAAQD,GAASC,MACvB,QAAcC,IAAVD,GAAuBA,EAAQ,GAAKA,IAAUE,KAAKC,MAAMC,gBAAgBC,QAAU,GACrF,MAAM,IAAIC,MAAM,wBAGlB,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,aAEpB,IAAIE,EAAYH,GAASI,WAA0B,IACpDZ,EACHa,OAAQ,qBAAqBZ,MAejC,YAAMa,CAAOd,GACX,MAAMQ,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,aAEpB,IAAIE,EAAYH,GAASI,WAA0B,IACpDZ,EACHa,OAAQ"}