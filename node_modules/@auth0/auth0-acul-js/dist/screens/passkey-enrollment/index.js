import{BaseContext as e}from"../../models/base-context.js";import{ScreenIds as t}from"../../utils/enums.js";import{FormHandler as s}from"../../utils/form-handler.js";import{createPasskeyCredentials as n}from"../../utils/passkeys.js";import{ScreenOverride as r}from"./screen-override.js";class a extends e{static screenIdentifier=t.PASSKEY_ENROLLMENT;screen;constructor(){super();const e=this.getContext("screen");this.screen=new r(e)}async continuePasskeyEnrollment(e){const t={state:this.transaction.state,telemetry:[a.screenIdentifier,"continuePasskeyEnrollment"]},r=this.screen.publicKey,o=r&&n(r);await new s(t).submitData({...e,passkey:JSON.stringify(o)})}async abortPasskeyEnrollment(e){const t={state:this.transaction.state,telemetry:[a.screenIdentifier,"abortPasskeyEnrollment"]};await new s(t).submitData({...e,action:"abort-passkey-enrollment"})}}export{a as default};
//# sourceMappingURL=index.js.map
