{"version":3,"file":"index.js","sources":["../../../../src/screens/passkey-enrollment/index.ts"],"sourcesContent":["import { BaseContext } from '../../models/base-context';\nimport { ScreenIds } from '../../utils/enums';\nimport { FormHandler } from '../../utils/form-handler';\nimport { createPasskeyCredentials } from '../../utils/passkeys';\n\nimport { ScreenOverride } from './screen-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type { PasskeyEnrollmentMembers, ScreenMembersOnPasskeyEnrollment as ScreenOptions } from '../../../interfaces/screens/passkey-enrollment';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class PasskeyEnrollment extends BaseContext implements PasskeyEnrollmentMembers {\n  static screenIdentifier: string = ScreenIds.PASSKEY_ENROLLMENT;\n  screen: ScreenOptions;\n\n  constructor() {\n    super();\n\n    const screenContext = this.getContext('screen') as ScreenContext;\n\n    this.screen = new ScreenOverride(screenContext);\n  }\n\n  /**\n   * @example\n   * import PasskeyEnrollment from '@auth0/auth0-acul-js/passkey-enrollment';\n   *\n   * const passkeyEnrollment = new PasskeyEnrollment();\n   * passkeyEnrollment.continuePasskeyEnrollment();\n   */\n  async continuePasskeyEnrollment(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [PasskeyEnrollment.screenIdentifier, 'continuePasskeyEnrollment'],\n    };\n\n    const publicKey = this.screen.publicKey;\n    const encoded = publicKey && createPasskeyCredentials(publicKey);\n\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, passkey: JSON.stringify(encoded) });\n  }\n\n  /**\n   * @example\n   * import PasskeyEnrollment from '@auth0/auth0-acul-js/passkey-enrollment';\n   *\n   * const passkeyEnrollment = new PasskeyEnrollment();\n   * passkeyEnrollment.abortPasskeyEnrollment();\n   */\n  async abortPasskeyEnrollment(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n      telemetry: [PasskeyEnrollment.screenIdentifier, 'abortPasskeyEnrollment'],\n    };\n\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, action: 'abort-passkey-enrollment' });\n  }\n}\n\nexport { PasskeyEnrollmentMembers, ScreenOptions as ScreenMembersOnPasskeyEnrollment };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["PasskeyEnrollment","BaseContext","static","ScreenIds","PASSKEY_ENROLLMENT","screen","constructor","super","screenContext","this","getContext","ScreenOverride","continuePasskeyEnrollment","payload","options","state","transaction","telemetry","screenIdentifier","publicKey","encoded","createPasskeyCredentials","FormHandler","submitData","passkey","JSON","stringify","abortPasskeyEnrollment","action"],"mappings":"+RAYqB,MAAAA,UAA0BC,EAC7CC,wBAAkCC,EAAUC,mBAC5CC,OAEA,WAAAC,GACEC,QAEA,MAAMC,EAAgBC,KAAKC,WAAW,UAEtCD,KAAKJ,OAAS,IAAIM,EAAeH,GAUnC,+BAAMI,CAA0BC,GAC9B,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAkBkB,iBAAkB,8BAG5CC,EAAYV,KAAKJ,OAAOc,UACxBC,EAAUD,GAAaE,EAAyBF,SAEhD,IAAIG,EAAYR,GAASS,WAA0B,IAAKV,EAASW,QAASC,KAAKC,UAAUN,KAUjG,4BAAMO,CAAuBd,GAC3B,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,MACxBE,UAAW,CAACjB,EAAkBkB,iBAAkB,iCAG5C,IAAII,EAAYR,GAASS,WAA0B,IAAKV,EAASe,OAAQ"}