{"version":3,"file":"index.js","sources":["../../../../src/screens/mfa-detect-browser-capabilities/index.ts"],"sourcesContent":["import { isJsAvailable, isBrave, isWebAuthAvailable, isWebAuthPlatformAvailable } from '../../../src/utils/browser-capabilities';\nimport { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { MfaDetectBrowserCapabilitiesMembers } from '../../../interfaces/screens/mfa-detect-browser-capabilities';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\nimport type { CustomOptions } from 'interfaces/common';\n\n/**\n * Class implementing the mfa-detect-browser-capabilities screen functionality\n * This screen detects browser capabilities for MFA authentication methods\n */\nexport default class MfaDetectBrowserCapabilities extends BaseContext implements MfaDetectBrowserCapabilitiesMembers {\n  /**\n   * Creates an instance of MfaDetectBrowserCapabilities screen manager\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Picks an authenticator based on browser capabilities\n   * @param payload The options containing browser capability flags\n   * @example\n   * ```typescript\n   * const mfaDetectBrowserCapabilities = new MfaDetectBrowserCapabilities();\n   * await mfaDetectBrowserCapabilities.detectCapabilities();\n   * ```\n   */\n  async detectCapabilities(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      'js-available': isJsAvailable(),\n      'is-brave': await isBrave(),\n      'webauthn-available': isWebAuthAvailable(),\n      'webauthn-platform-available': await isWebAuthPlatformAvailable(),\n      action: 'pick-authenticator',\n    });\n  }\n}\n\nexport { MfaDetectBrowserCapabilitiesMembers };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["MfaDetectBrowserCapabilities","BaseContext","constructor","super","detectCapabilities","payload","options","state","this","transaction","FormHandler","submitData","isJsAvailable","isBrave","isWebAuthAvailable","isWebAuthPlatformAvailable","action"],"mappings":"8PAYqB,MAAAA,UAAqCC,EAIxD,WAAAC,GACEC,QAYF,wBAAMC,CAAmBC,GACvB,MAAMC,EAAuB,CAC3BC,MAAOC,KAAKC,YAAYF,aAEpB,IAAIG,EAAYJ,GAASK,WAA0B,IACpDN,EACH,eAAgBO,IAChB,iBAAkBC,IAClB,qBAAsBC,IACtB,oCAAqCC,IACrCC,OAAQ"}