{"version":3,"file":"index.js","sources":["../../../../src/screens/reset-password/index.ts"],"sourcesContent":["import { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport { ScreenOverride } from './screen-override';\n\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type {\n  ResetPasswordOptions,\n  ResetPasswordMembers,\n  ScreenMembersOnResetPassword as ScreenOptions,\n} from '../../../interfaces/screens/reset-password';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\nexport default class ResetPassword extends BaseContext implements ResetPasswordMembers {\n  screen: ScreenOptions;\n  constructor() {\n    super();\n    const screenContext = this.getContext('screen') as ScreenContext;\n    this.screen = new ScreenOverride(screenContext);\n  }\n  /**\n   * @example\n   * import ResetPassword from '@auth0/auth0-acul-js/reset-password';\n   *\n   * const resetPassword = new ResetPassword();\n   * resetPassword.resetPassword({\n   *    'password-reset': 'Test@123!',\n   *    're-enter-password': 'Test@123!',\n   * });\n   */\n  async resetPassword(payload: ResetPasswordOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n    await new FormHandler(options).submitData(payload);\n  }\n}\nexport { ResetPasswordMembers, ResetPasswordOptions, ScreenOptions as ScreenMembersOnResetPassword };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["ResetPassword","BaseContext","screen","constructor","super","screenContext","this","getContext","ScreenOverride","resetPassword","payload","options","state","transaction","FormHandler","submitData"],"mappings":"2KAYqB,MAAAA,UAAsBC,EACzCC,OACA,WAAAC,GACEC,QACA,MAAMC,EAAgBC,KAAKC,WAAW,UACtCD,KAAKJ,OAAS,IAAIM,EAAeH,GAYnC,mBAAMI,CAAcC,GAClB,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,aAEpB,IAAIE,EAAYH,GAASI,WAAWL"}