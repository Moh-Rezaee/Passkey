import{BaseContext as t}from"../../models/base-context.js";import{ScreenIds as e}from"../../utils/enums.js";import{FormHandler as s}from"../../utils/form-handler.js";import{ScreenOverride as n}from"./screen-override.js";import{TransactionOverride as r}from"./transaction-override.js";class a extends t{static screenIdentifier=e.RESET_PASSWORD_REQUEST;screen;transaction;constructor(){super();const t=this.getContext("screen"),e=this.getContext("transaction");this.screen=new n(t),this.transaction=new r(e)}async resetPassword(t){const e={state:this.transaction.state,telemetry:[a.screenIdentifier,"resetPassword"]},n=function(t,e){if(e)return t;{const{username:e,...s}=t;return{...s,email:t.username}}}(t,this.transaction.hasFlexibleIdentifier);await new s(e).submitData(n)}async backToLogin(t){const e={state:this.transaction.state,telemetry:[a.screenIdentifier,"backToLogin"]};await new s(e).submitData({...t,action:"back-to-login"})}}export{a as default};
//# sourceMappingURL=index.js.map
