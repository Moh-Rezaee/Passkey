{"version":3,"file":"index.js","sources":["../../../../src/screens/mfa-sms-enrollment/index.ts"],"sourcesContent":["import { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type {\n  MfaSmsEnrollmentMembers,\n  MfaSmsEnrollmentOptions,\n  ScreenMembersOnMfaSmsEnrollment,\n} from '../../../interfaces/screens/mfa-sms-enrollment';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\n/**\n * Represents the MFA SMS Enrollment screen.\n */\nexport default class MfaSmsEnrollment extends BaseContext implements MfaSmsEnrollmentMembers {\n  screen: ScreenMembersOnMfaSmsEnrollment;\n\n  /**\n   * Initializes a new instance of the MfaSmsEnrollment class.\n   */\n  constructor() {\n    super();\n    this.screen = this.getContext('screen') as ScreenMembersOnMfaSmsEnrollment;\n  }\n\n  /**\n   * Handles the action to pick a country code for SMS enrollment.\n   * @param payload Optional custom options to include in the request.\n   * @returns A promise that resolves when the action is complete.\n   * @example\n   * ```typescript\n   * import MfaSmsEnrollment from '@auth0/auth0-acul-js/mfa-sms-enrollment';\n   *\n   * const mfaSmsEnrollment = new MfaSmsEnrollment();\n   * await mfaSmsEnrollment.pickCountryCode();\n   * ```\n   */\n  async pickCountryCode(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: 'pick-country-code',\n    });\n  }\n\n  /**\n   * Continues the SMS enrollment process with the provided phone number.\n   * @param payload The phone number to use for enrollment.\n   * @returns A promise that resolves when the enrollment process is complete.\n   * @throws {Error} If the phone number is missing.\n   * @example\n   * ```typescript\n   * import MfaSmsEnrollment from '@auth0/auth0-acul-js/mfa-sms-enrollment';\n   *\n   * const mfaSmsEnrollment = new MfaSmsEnrollment();\n   * await mfaSmsEnrollment.continueEnrollment({ phone: '1234567890' });\n   * ```\n   */\n  async continueEnrollment(payload: MfaSmsEnrollmentOptions): Promise<void> {\n    if (!payload.phone) {\n      throw new Error('Phone number is required to continue enrollment.');\n    }\n\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n    await new FormHandler(options).submitData<MfaSmsEnrollmentOptions>({\n      ...payload,\n      action: 'default',\n    });\n  }\n\n  /**\n   * Handles the action to try another method for MFA.\n   * @param payload Optional custom options to include in the request.\n   * @returns A promise that resolves when the action is complete.\n   * @example\n   * ```typescript\n   * import MfaSmsEnrollment from '@auth0/auth0-acul-js/mfa-sms-enrollment';\n   *\n   * const mfaSmsEnrollment = new MfaSmsEnrollment();\n   * await mfaSmsEnrollment.tryAnotherMethod();\n   * ```\n   */\n  async tryAnotherMethod(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n    await new FormHandler(options).submitData<CustomOptions>({\n      ...payload,\n      action: 'pick-authenticator',\n    });\n  }\n}\n\nexport { MfaSmsEnrollmentMembers, MfaSmsEnrollmentOptions, ScreenMembersOnMfaSmsEnrollment };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["MfaSmsEnrollment","BaseContext","screen","constructor","super","this","getContext","pickCountryCode","payload","options","state","transaction","FormHandler","submitData","action","continueEnrollment","phone","Error","tryAnotherMethod"],"mappings":"qHAcqB,MAAAA,UAAyBC,EAC5CC,OAKA,WAAAC,GACEC,QACAC,KAAKH,OAASG,KAAKC,WAAW,UAehC,qBAAMC,CAAgBC,GACpB,MAAMC,EAAuB,CAC3BC,MAAOL,KAAKM,YAAYD,aAEpB,IAAIE,EAAYH,GAASI,WAA0B,IACpDL,EACHM,OAAQ,sBAiBZ,wBAAMC,CAAmBP,GACvB,IAAKA,EAAQQ,MACX,MAAM,IAAIC,MAAM,oDAGlB,MAAMR,EAAuB,CAC3BC,MAAOL,KAAKM,YAAYD,aAEpB,IAAIE,EAAYH,GAASI,WAAoC,IAC9DL,EACHM,OAAQ,YAgBZ,sBAAMI,CAAiBV,GACrB,MAAMC,EAAuB,CAC3BC,MAAOL,KAAKM,YAAYD,aAEpB,IAAIE,EAAYH,GAASI,WAA0B,IACpDL,EACHM,OAAQ"}