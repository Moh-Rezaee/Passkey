{"version":3,"file":"index.js","sources":["../../../../src/screens/passkey-enrollment-local/index.ts"],"sourcesContent":["import { BaseContext } from '../../models/base-context';\nimport { FormHandler } from '../../utils/form-handler';\nimport { createPasskeyCredentials } from '../../utils/passkeys';\n\nimport { ScreenOverride } from './screen-override';\n\nimport type { CustomOptions } from '../../../interfaces/common';\nimport type { ScreenContext } from '../../../interfaces/models/screen';\nimport type {\n  PasskeyEnrollmentLocalMembers,\n  ScreenMembersOnPasskeyEnrollmentLocal as ScreenOptions,\n  AbortEnrollmentOptions,\n} from '../../../interfaces/screens/passkey-enrollment-local';\nimport type { FormOptions } from '../../../interfaces/utils/form-handler';\n\nexport default class PasskeyEnrollmentLocal extends BaseContext implements PasskeyEnrollmentLocalMembers {\n  screen: ScreenOptions;\n\n  constructor() {\n    super();\n\n    const screenContext = this.getContext('screen') as ScreenContext;\n\n    this.screen = new ScreenOverride(screenContext);\n  }\n\n  /**\n   * @example\n   * import PasskeyEnrollmentLocal from '@auth0/auth0-acul-js/passkey-enrollment-local';\n   *\n   * const passkeyEnrollment = new PasskeyEnrollmentLocal();\n   * passkeyEnrollment.continuePasskeyEnrollment();\n   */\n  async continuePasskeyEnrollment(payload?: CustomOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n\n    const publicKey = this.screen.publicKey;\n    const encoded = publicKey && createPasskeyCredentials(publicKey);\n\n    await new FormHandler(options).submitData<CustomOptions>({ ...payload, passkey: JSON.stringify(encoded) });\n  }\n\n  /**\n   * @example\n   * import PasskeyEnrollmentLocal from '@auth0/auth0-acul-js/passkey-enrollment-local';\n   *\n   * const passkeyEnrollment = new PasskeyEnrollmentLocal();\n   * passkeyEnrollment.abortPasskeyEnrollment({\n   *     doNotShowAgain: <boolean>\n   * });\n   */\n  async abortPasskeyEnrollment(payload: AbortEnrollmentOptions): Promise<void> {\n    const options: FormOptions = {\n      state: this.transaction.state,\n    };\n\n    const userActions: { [key: string]: string } = {};\n    if (payload['doNotShowAgain'] === true) {\n      userActions['dontShowAgain'] = 'on';\n    }\n    await new FormHandler(options).submitData<AbortEnrollmentOptions>({ ...payload, action: 'abort-passkey-enrollment', ...userActions });\n  }\n}\n\nexport { PasskeyEnrollmentLocalMembers, AbortEnrollmentOptions, ScreenOptions as ScreenMembersOnPasskeyEnrollmentLocal };\nexport * from '../../../interfaces/export/common';\nexport * from '../../../interfaces/export/base-properties';\n"],"names":["PasskeyEnrollmentLocal","BaseContext","screen","constructor","super","screenContext","this","getContext","ScreenOverride","continuePasskeyEnrollment","payload","options","state","transaction","publicKey","encoded","createPasskeyCredentials","FormHandler","submitData","passkey","JSON","stringify","abortPasskeyEnrollment","userActions","action"],"mappings":"8OAeqB,MAAAA,UAA+BC,EAClDC,OAEA,WAAAC,GACEC,QAEA,MAAMC,EAAgBC,KAAKC,WAAW,UAEtCD,KAAKJ,OAAS,IAAIM,EAAeH,GAUnC,+BAAMI,CAA0BC,GAC9B,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,OAGpBE,EAAYR,KAAKJ,OAAOY,UACxBC,EAAUD,GAAaE,EAAyBF,SAEhD,IAAIG,EAAYN,GAASO,WAA0B,IAAKR,EAASS,QAASC,KAAKC,UAAUN,KAYjG,4BAAMO,CAAuBZ,GAC3B,MAAMC,EAAuB,CAC3BC,MAAON,KAAKO,YAAYD,OAGpBW,EAAyC,CAAE,GACf,IAA9Bb,EAAwB,iBAC1Ba,EAA2B,cAAI,YAE3B,IAAIN,EAAYN,GAASO,WAAmC,IAAKR,EAASc,OAAQ,8BAA+BD"}